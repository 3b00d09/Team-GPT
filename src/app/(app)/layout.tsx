import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "../../app/globals.css";
import Conversations from "@/lib/components/conversations";
import "@fortawesome/fontawesome-svg-core/styles.css"
import { QueryClientWrapper } from "@/lib/components/QueryClientWrapper";

import { lucia, validateRequest } from "@/lib/auth/auth";
import { redirect } from "next/navigation";
import { cookies } from "next/headers";
import { AuthForm, type ActionResult } from "@/lib/components/AuthForm";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
export const maxDuration = 30;

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  	const { user } = await validateRequest();
    if (!user) {
      return redirect("/login");
    }
    
  return (
    <html lang="en">
      <body className={inter.className}>
        <main className="flex w-screen h-screen overflow-hidden text-white">
          <Conversations />
          <div className="flex-1 bg-[#212121] p-4 flex flex-col relative">
            <div className="flex items-center justify-between">
              Welcome {user.username}
              <AuthForm action={logout}>
                <button>Sign out</button>
              </AuthForm>
            </div>
            <QueryClientWrapper>{children}</QueryClientWrapper>
          </div>
        </main>
      </body>
    </html>
  );
}

async function logout(): Promise<ActionResult> {
  "use server";
  const { session } = await validateRequest();
  if (!session) {
    return {
      error: "Unauthorized",
    };
  }

  await lucia.invalidateSession(session.id);

  const sessionCookie = lucia.createBlankSessionCookie();
  cookies().set(
    sessionCookie.name,
    sessionCookie.value,
    sessionCookie.attributes
  );
  return redirect("/login");
}